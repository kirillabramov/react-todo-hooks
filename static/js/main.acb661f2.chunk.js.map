{"version":3,"sources":["reducers/index.js","actions/types.js","store.js","actions/index.js","components/Form/RadioButtons.js","components/Form/FormSelect.js","components/Form/Autosuggestion.js","components/Form/DrawerForm.js","components/TaskTable.js","components/App.js","index.js"],"names":["initialState","tasks","1","id","name","status","description","date","important","tag","2","formFields","Date","isDrawerOpen","isEdit","isHidden","getId","counter","arguments","length","undefined","createIncrement","newState","reducer","state","_ref3","type","payload","editedStatus","newStateWithEditedOption","R","_ref","newId","newTask","Object","objectSpread","addTask","field","value","setField","_ref2","keys","map","key","transformations","merged","editTask","StateContext","createContext","useStateValue","useContext","openDrawer","dispatch","isOpen","handleFormFields","handleFormEdit","hideFields","RadioButtons","_useStateValue","_useStateValue2","slicedToArray","react_default","a","createElement","RadioGroup_default","aria-label","defaultValue","onChange","e","target","row","margin","FormControlLabel_default","control","Radio_default","color","label","labelPlacement","FormSelect","Fragment","FormControl_default","style","display","alignItems","justifyContent","InputLabel_default","htmlFor","top","left","Select_default","native","width","Icon_default","order","Autosuggestion","_useState","useState","_useState2","setSuggestion","suggestions","autosuggestProps","renderInputComponent","inputProps","classes","_inputProps$inputRef","inputRef","ref","other","objectWithoutProperties","TextField_default","assign","fullWidth","InputProps","node","onSuggestionsFetchRequested","inputValue","deburr","trim","toLowerCase","inputLength","count","filter","suggestion","keep","slice","getSuggestions","onSuggestionsClearRequested","_","getSuggestionValue","renderSuggestion","query","isHighlighted","matches","match","parts","parse","MenuItem_default","selected","component","part","index","highlight","String","fontWeight","text","dist_default","placeholder","event","newValue","renderSuggestionsContainer","options","Paper_default","containerProps","square","children","withStyles","buttons","marginRight","&:focus","outline","&:last-child","wrapper","padding","flexDirection","titleMargin","marginBottom","buttonWrapper","marginTop","position","bottom","drawerContent","height","overflow","snackBar","isSnackbarVisible","setShowSnackbar","_useState3","_useState4","isErrorSnackbarVisible","setErrorShowSnackbar","_useState5","_useState6","isLoader","setLoader","handleExitModal","resetForm","snackBarAction","Button_default","onClick","className","variant","size","Drawer_default","open","onClose","anchor","CircularProgress_default","Input_default","multiline","material_ui_pickers_esm","utils","DateFnsUtils","Form_RadioButtons","Form_FormSelect","Form_Autosuggestion","_state$formFields","selectedDate","setTimeout","dateFormat","toGMTString","split","task","concat","Snackbar_default","anchorOrigin","vertical","horizontal","SnackbarContent_default","message","action","backgroundColor","autoHideDuration","TaskTable","statusVal","setStatusVal","openedId","setOpenedId","Boolean","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","values","idx","scope","IconButton_default","aria-owns","aria-haspopup","taskId","currentTarget","createOpenMenu","MoreVert_default","Menu_default","anchorEl","option","editStatus","data-value","_state$tasks$idx","handleEditTask","Edit_default","removeTask","Delete_default","App","AppBar_default","Toolbar_default","Add_default","Typography_default","noWrap","Form_DrawerForm","components_TaskTable","ReactDOM","render","Provider","useReducer","components_App","document","getElementById"],"mappings":"ogBAYMA,EAAe,CACnBC,MAAO,CACLC,EAAG,CACDC,GAAI,EACJC,KAAM,SACNC,OAAQ,qEACRC,YAAa,gBACbC,KAAM,cACNC,UAAW,kFACXC,IAAK,uBAEPC,EAAG,CACDP,GAAI,EACJC,KAAM,SACNC,OAAQ,8CACRC,YAAa,gBACbC,KAAM,cACNC,UAAW,8FACXC,IAAK,wBAGTE,WAAY,CACVR,GAAI,KACJC,KAAM,GACNC,OAAQ,GACRC,YAAa,GACbC,KAAM,IAAIK,KACVJ,UAAW,GACXC,IAAK,IAEPI,cAAc,EACdC,QAAQ,EACRC,UAAU,GAGNC,EADkB,eAACC,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAW,EAAX,OAAiB,kBAAMD,KACjCI,GAgBVC,EAAW,GAuBTC,EAAU,SAACC,EAADC,GAA8B,IAApBC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,QACxBC,EAAeD,EAAQtB,OACvBwB,EAA2BC,IAC/B,CAAC,QAASH,EAAQxB,GAAI,UACtByB,EACAJ,GAEF,OAAQE,GACN,IC9Fa,WD+FX,OA/CU,SAAAK,EAA0DP,GAAUO,EAAjE5B,GAAiE,IAA7DE,EAA6D0B,EAA7D1B,OAAQD,EAAqD2B,EAArD3B,KAAME,EAA+CyB,EAA/CzB,YAAaC,EAAkCwB,EAAlCxB,KAAMC,EAA4BuB,EAA5BvB,UAAWC,EAAiBsB,EAAjBtB,IAC3DuB,EAAQhB,IACRiB,EAAU,CACd9B,GAAI6B,EACJ5B,OACAC,SACAC,cACAC,OACAC,YACAC,OAEIa,EAAWQ,IAAY,CAAC,QAASE,GAAQC,EAAST,GAExD,OAAOU,OAAAC,EAAA,EAAAD,CAAA,GAAKZ,GAkCDc,CAAQT,EAASH,GAC1B,IC/FgB,cDgGd,OAAOU,OAAAC,EAAA,EAAAD,CAAA,GACFL,GAEP,IClGgB,cDmGd,OAAOK,OAAAC,EAAA,EAAAD,CAAA,GACFV,EADL,CAEEvB,MAAO6B,IAASH,EAATO,OAAAC,EAAA,EAAAD,CAAA,GAAuBV,EAAMvB,UAExC,ICtGgB,cDuGd,OAAOiC,OAAAC,EAAA,EAAAD,CAAA,GACFV,EADL,CAEEX,aAAcc,IAElB,IC1GuB,qBD2GrB,OA5BW,SAACU,EAAOC,EAAOd,GAC9B,OAAOM,IAAY,CAAC,aAAcO,GAAQC,EAAOd,GA2BtCe,CAASZ,EAAQU,MAAOV,EAAQW,MAAOd,GAChD,IC3GwB,sBD4GtB,OAAOU,OAAAC,EAAA,EAAAD,CAAA,GACFV,EADL,CAEEV,OAAQa,IAEZ,IC/GqB,mBDgHnB,OAtDW,SAAAa,EAA0DhB,GAAU,IAAjErB,EAAiEqC,EAAjErC,GAAIE,EAA6DmC,EAA7DnC,OAAQD,EAAqDoC,EAArDpC,KAAME,EAA+CkC,EAA/ClC,YAAaC,EAAkCiC,EAAlCjC,KAAMC,EAA4BgC,EAA5BhC,UAAWC,EAAiB+B,EAAjB/B,IAgBlE,OAfAyB,OAAOO,KAAKjB,EAAMvB,OAAOyC,IAAI,SAAAC,GAC3B,IAAKA,KAASxC,EAAI,CAChB,IAAMyC,EAAkB,CACtBzC,KACAC,OACAC,SACAC,cACAC,OACAC,YACAC,OAEIoC,EAASf,IAAQN,EAAMvB,MAAM0C,GAAMC,GACzCtB,EAAWQ,IAAY,CAAC,QAAS3B,GAAK0C,EAAQrB,MAG3CU,OAAAC,EAAA,EAAAD,CAAA,GAAKZ,GAsCDwB,CAASnB,EAASH,GAC3B,IChHgB,cDiHd,OAAOU,OAAAC,EAAA,EAAAD,CAAA,GACFV,EADL,CAEET,SAAUY,IAEd,QACE,OAAOH,IEzHPuB,EAAeC,0BAMfC,EAAgB,kBAAMC,qBAAWH,ICsBjCI,EAAa,SAACC,EAAUC,GAC5BD,EAAS,CACP1B,KF/BgB,cEgChBC,QAAS0B,KAIPC,GAAmB,SAACF,EAAUf,GAClCe,EAAS,CACP1B,KFrCuB,qBEsCvBC,QAASU,KAIPkB,GAAiB,SAACH,EAAUtC,GAChCsC,EAAS,CACP1B,KF3CwB,sBE4CxBC,QAASb,KAWP0C,GAAa,SAACJ,EAAUzB,GAC5ByB,EAAS,CACP1B,KFvDgB,cEwDhBC,aCbW8B,GA3CM,WAAM,IAAAC,EACCT,IADDU,EAAAzB,OAAA0B,EAAA,EAAA1B,CAAAwB,EAAA,GAClBlC,EADkBmC,EAAA,GACXP,EADWO,EAAA,GAGzB,OACEE,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,aAAW,WACX7D,KAAK,WACLkC,MAAOd,EAAMb,WAAWH,UACxB0D,aAAc1C,EAAMb,WAAWH,UAC/B2D,SAAU,SAAAC,GACRd,GAAiBF,EAAU,CAAEf,MAAO,YAAaC,MAAO8B,EAAEC,OAAO/B,SAEnEgC,KAAG,EACHC,OAAO,UAEPV,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACExB,MAAM,kFACNmC,QAASZ,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAOa,MAAM,YACtBC,MAAM,kFACNC,eAAe,WAEjBhB,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACExB,MAAM,8FACNmC,QAASZ,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAOa,MAAM,YACtBC,MAAM,8FACNC,eAAe,WAEjBhB,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACExB,MAAM,+FACNmC,QAASZ,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAOa,MAAM,YACtBC,MAAM,+FACNC,eAAe,WAEjBhB,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACExB,MAAM,2GACNmC,QAASZ,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAOa,MAAM,YACtBC,MAAM,2GACNC,eAAe,yECRRC,UA3BI,WAAM,IAAApB,EACGT,IADHU,EAAAzB,OAAA0B,EAAA,EAAA1B,CAAAwB,EAAA,GAChBlC,EADgBmC,EAAA,GACTP,EADSO,EAAA,GAEvB,OACEE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiB,SAAA,KACElB,EAAAC,EAAAC,cAACiB,GAAAlB,EAAD,CAAaS,OAAO,UAClBV,EAAAC,EAAAC,cAAA,OAAKkB,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,kBACnEvB,EAAAC,EAAAC,cAACsB,GAAAvB,EAAD,CAAYwB,QAAQ,oBAAoBL,MAAO,CAAEM,IAAK,QAASC,KAAM,SAArE,wCAGA3B,EAAAC,EAAAC,cAAC0B,GAAA3B,EAAD,CACE4B,QAAM,EACNpD,MAAOd,EAAMb,WAAWN,OACxB8D,SAAU,SAAAC,GAAC,OAAId,GAAiBF,EAAU,CAAEf,MAAO,SAAUC,MAAO8B,EAAEC,OAAO/B,SAC7E2C,MAAO,CAAEU,MAAO,QAEhB9B,EAAAC,EAAAC,cAAA,UAAQzB,MAAM,KACduB,EAAAC,EAAAC,cAAA,UAAQzB,MAAM,sEAAd,sEACAuB,EAAAC,EAAAC,cAAA,UAAQzB,MAAM,+CAAd,+CACAuB,EAAAC,EAAAC,cAAA,UAAQzB,MAAM,0DAAd,2DAEFuB,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CAAMmB,MAAO,CAAEY,MAAO,KAAMlB,MAAO,YAAnC,qJCwFKmB,GAxGQ,WAAM,IAAApC,EACDT,IADCU,EAAAzB,OAAA0B,EAAA,EAAA1B,CAAAwB,EAAA,GACpBlC,EADoBmC,EAAA,GACbP,EADaO,EAAA,GAAAoC,EAESC,qBAFTC,EAAA/D,OAAA0B,EAAA,EAAA1B,CAAA6D,EAAA,GAERG,GAFQD,EAAA,GAAAA,EAAA,IAGrBE,EAAc,CAAC,CAAEvB,MAAO,uBAAU,CAAEA,MAAO,uBAAU,CAAEA,MAAO,uBAAU,CAAEA,MAAO,wBAsEjFwB,EAAmB,CACvBC,qBAtE2B,SAAAC,GAC6BA,EAAhDC,QADiC,IAAAC,EACeF,EAAvCG,gBADwB,IAAAD,EACb,aADaA,EACHE,EAAkBJ,EAAlBI,IAAQC,EADLzE,OAAA0E,GAAA,EAAA1E,CACeoE,EADf,8BAGzC,OACEzC,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD5B,OAAA4E,OAAA,CACEC,WAAS,EACTC,WAAY,CACVP,SAAU,SAAAQ,GACRP,EAAIO,GACJR,EAASQ,MAGTN,KA2DRR,cACAe,4BAdsC,SAAA1E,GAAe,IAAZF,EAAYE,EAAZF,MACzC4D,EArBqB,SAAA5D,GACrB,IAAM6E,EAAaC,KAAO9E,EAAM+E,QAAQC,cAClCC,EAAcJ,EAAWhG,OAC3BqG,EAAQ,EACZ,OAAuB,IAAhBD,EACH,GACApB,EAAYsB,OAAO,SAAAC,GACjB,IAAMC,EACJH,EAAQ,GAAKE,EAAW9C,MAAMgD,MAAM,EAAGL,GAAaD,gBAAkBH,EAMxE,OAJIQ,IACFH,GAAS,GAGJG,IAOCE,CAAevF,KAc7BwF,4BAZsC,SAAAC,GACtC7B,EAAcC,IAYd6B,mBAnByB,SAAAN,GACzB,OAAOA,EAAW9C,OAmBlBqD,iBA3DuB,SAACP,EAAD3F,GAA0C,IAA3BmG,EAA2BnG,EAA3BmG,MAAOC,EAAoBpG,EAApBoG,cACvCC,EAAUC,KAAMX,EAAW9C,MAAOsD,GAClCI,EAAQC,KAAMb,EAAW9C,MAAOwD,GAEtC,OACEvE,EAAAC,EAAAC,cAACyE,GAAA1E,EAAD,CAAU2E,SAAUN,EAAeO,UAAU,OAC3C7E,EAAAC,EAAAC,cAAA,WACGuE,EAAM5F,IAAI,SAACiG,EAAMC,GAAP,OACTD,EAAKE,UACHhF,EAAAC,EAAAC,cAAA,QAAMpB,IAAKmG,OAAOF,GAAQ3D,MAAO,CAAE8D,WAAY,MAC5CJ,EAAKK,MAGRnF,EAAAC,EAAAC,cAAA,UAAQpB,IAAKmG,OAAOF,GAAQ3D,MAAO,CAAE8D,WAAY,MAC9CJ,EAAKK,YA+CpB,OACEnF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiB,SAAA,KACElB,EAAAC,EAAAC,cAAA,OAAKkB,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,kBACnEvB,EAAAC,EAAAC,cAACkF,GAAAnF,EAAD5B,OAAA4E,OAAA,GACMV,EADN,CAEEE,WAAY,CACV4C,YAAa,yQACb5G,MAAOd,EAAMb,WAAWF,IACxB0D,SApBgB,SAACgF,EAAD1H,GAAyB,IAAf2H,EAAe3H,EAAf2H,SAClC9F,GAAiBF,EAAU,CAAEf,MAAO,MAAOC,MAAO8G,KAoB1C7E,OAAQ,UAEV8E,2BAA4B,SAAAC,GAAO,OACjCzF,EAAAC,EAAAC,cAACwF,GAAAzF,EAAD5B,OAAA4E,OAAA,GAAWwC,EAAQE,eAAnB,CAAmCC,QAAM,IACtCH,EAAQI,cAIf7F,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CAAMmB,MAAO,CAAEY,MAAO,KAAMlB,MAAO,YAAnC,WCyJOgF,wBArPA,CACbC,QAAS,CACPC,YAAa,OACbC,UAAW,CACTC,QAAS,QAEXC,eAAgB,CACdH,YAAa,MAGjBI,QAAS,CACPC,QAAS,SACThF,QAAS,OACTiF,cAAe,UAEjBC,YAAa,CACXC,aAAc,QAEhBC,cAAe,CACbpF,QAAS,OACTqF,UAAW,OACXC,SAAU,WACVC,OAAQ,QAEVC,cAAe,CACbxF,QAAS,OACTiF,cAAe,SACfQ,OAAQ,QACRC,SAAU,SACVV,QAAS,UAEXW,SAAU,CACRL,SAAU,WACVhF,KAAM,UAoNKmE,CAhNI,SAAA5H,GAAiB,IAAdwE,EAAcxE,EAAdwE,QAAc7C,EACRT,IADQU,EAAAzB,OAAA0B,EAAA,EAAA1B,CAAAwB,EAAA,GAC3BlC,EAD2BmC,EAAA,GACpBP,EADoBO,EAAA,GAAAoC,EAEWC,oBAAS,GAFpBC,EAAA/D,OAAA0B,EAAA,EAAA1B,CAAA6D,EAAA,GAE3B+E,EAF2B7E,EAAA,GAER8E,EAFQ9E,EAAA,GAAA+E,EAGqBhF,oBAAS,GAH9BiF,EAAA/I,OAAA0B,EAAA,EAAA1B,CAAA8I,EAAA,GAG3BE,EAH2BD,EAAA,GAGHE,EAHGF,EAAA,GAAAG,EAIJpF,oBAAS,GAJLqF,EAAAnJ,OAAA0B,EAAA,EAAA1B,CAAAkJ,EAAA,GAI3BE,EAJ2BD,EAAA,GAIjBE,EAJiBF,EAAA,GAS5BG,EAAkB,SAAAzD,GACtB5E,EAAWC,GAAU,GACrB2H,GAAgB,IAEZU,EAAY,WAChBnI,GAAiBF,EAAU,CAAEf,MAAO,SAAUC,MAAO,KACrDgB,GAAiBF,EAAU,CAAEf,MAAO,KAAMC,MAAO,OACjDgB,GAAiBF,EAAU,CAAEf,MAAO,OAAQC,MAAO,KACnDgB,GAAiBF,EAAU,CAAEf,MAAO,cAAeC,MAAO,KAC1DgB,GAAiBF,EAAU,CAAEf,MAAO,MAAOC,MAAO,KAClDgB,GAAiBF,EAAU,CAAEf,MAAO,OAAQC,MAAO,IAAI1B,OACvD0C,GAAiBF,EAAU,CAAEf,MAAO,YAAaC,MAAO,MAEpDoJ,EACJ7H,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4H,EAAA7H,EAAD,CACE8H,QAAS,SAAA7D,GAAC,OAAIyD,KACdK,UAAWtF,EAAQqD,QACnBkC,QAAQ,OACRnH,MAAM,YACNoH,KAAK,SALP,gEASAlI,EAAAC,EAAAC,cAAC4H,EAAA7H,EAAD,CACE8H,QAAS,SAAA7D,GA3BbgD,GAAgB,IA4BZc,UAAWtF,EAAQqD,QACnBkC,QAAQ,OACR7G,MAAO,CAAEN,MAAO,QAChBoH,KAAK,SALP,mCAkDJ,OACElI,EAAAC,EAAAC,cAAA,OAAK8H,UAAU,OACbhI,EAAAC,EAAAC,cAACiI,EAAAlI,EAAD,CAAQmI,KAAMzK,EAAMX,aAAcqL,QAAS,SAAAnE,GAxC7CgD,GAAgB,IAwCkDoB,OAAO,SACpEb,EACCzH,EAAAC,EAAAC,cAACqI,EAAAtI,EAAD,CAAkBmB,MAAO,CAAEV,OAAQ,WAEnCV,EAAAC,EAAAC,cAAA,OAAK8H,UAAWtF,EAAQ0D,SACtBpG,EAAAC,EAAAC,cAAA,MAAI8H,UAAWtF,EAAQ6D,aAAvB,uEACAvG,EAAAC,EAAAC,cAAA,OAAK8H,UAAWtF,EAAQmE,eACtB7G,EAAAC,EAAAC,cAAA,OACEkB,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,kBAEhEvB,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CACEiI,KAAK,QACLD,QAAQ,WACRlH,MAAM,wFACNT,SAAU,SAAAC,GAAC,OACTd,GAAiBF,EAAU,CAAEf,MAAO,OAAQC,MAAO8B,EAAEC,OAAO/B,SAE9D2C,MAAO,CAAEU,MAAOnE,EAAMT,SAAW,QAAU,OAC3CuB,MAAOd,EAAMb,WAAWP,MAExByD,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,OAEFD,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CAAMmB,MAAO,CAAEY,MAAO,KAAMlB,MAAO,YAAnC,WAEFd,EAAAC,EAAAC,cAAA,OACEkB,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,kBAEhEvB,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CACEiI,KAAK,QACLD,QAAQ,WACRvH,OAAO,SACP+H,WAAW,EACX1H,MAAM,wFACNT,SAAU,SAAAC,GAAC,OACTd,GAAiBF,EAAU,CAAEf,MAAO,cAAeC,MAAO8B,EAAEC,OAAO/B,SAErE2C,MAAO,CAAEU,MAAOnE,EAAMT,SAAW,QAAU,OAC3CuB,MAAOd,EAAMb,WAAWL,aAExBuD,EAAAC,EAAAC,cAACsI,EAAAvI,EAAD,OAEFD,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CAAMmB,MAAO,CAAEY,MAAO,KAAMlB,MAAO,YAAnC,eAEFd,EAAAC,EAAAC,cAAA,OACEkB,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,kBAEhEvB,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAyBC,MAAOC,KAC9B5I,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CACEjK,MAAOd,EAAMb,WAAWJ,KACxB0E,MAAO,CAAEU,MAAOnE,EAAMT,SAAW,QAAU,OAC3CoD,SAxFC,SAAA5D,GACjB+C,GAAiBF,EAAU,CAAEf,MAAO,OAAQC,MAAO/B,IAC/CiB,EAAMT,UAAUyC,GAAWJ,GAAU,IAuFzBmB,OAAO,YAGXV,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,CAAMmB,MAAO,CAAEY,MAAO,KAAMlB,MAAO,YAAnC,eAEFd,EAAAC,EAAAC,cAAA,OACE8H,UAAU,gBACV5G,MAAO,CAAEC,QAAS1D,EAAMT,SAAW,OAAS,OAAQoJ,cAAe,WAEnEtG,EAAAC,EAAAC,cAAC2I,GAAD,MACA7I,EAAAC,EAAAC,cAAC4I,GAAD,MACA9I,EAAAC,EAAAC,cAAC6I,GAAD,QAGJ/I,EAAAC,EAAAC,cAAA,OAAK8H,UAAWtF,EAAQ+D,eACtBzG,EAAAC,EAAAC,cAAC4H,EAAA7H,EAAD,CACEa,MAAM,UACNmH,QAAQ,YACRD,UAAWtF,EAAQqD,QACnBgC,QAxGS,SAAA7D,GAAK,IAAA8E,EACoDrL,EAAMb,WAA5ER,EADkB0M,EAClB1M,GAAIC,EADcyM,EACdzM,KAAME,EADQuM,EACRvM,YAAmBwM,EADXD,EACKtM,KAAoBF,EADzBwM,EACyBxM,OAAQG,EADjCqM,EACiCrM,UAAWC,EAD5CoM,EAC4CpM,IAElD,IAAhBL,EAAKe,QAIToK,GAAU,GAEVwB,WAAW,WACTvB,IAEA,IAAMwB,EAAa,IAAIpM,KAAKkM,GAAcG,cAAcC,MAAM,KACxDC,EAAO,CACXhN,KACAC,OACAE,cACAC,KAAI,GAAA6M,OAAKJ,EAAW,GAAhB,KAAAI,OAAsBJ,EAAW,GAAjC,KAAAI,OAAuCJ,EAAW,IACtD3M,SACAG,YACAC,OAEEe,EAAMV,OJ5EC,SAACsC,EAAU+J,GAC1B/J,EAAS,CACP1B,KFjDqB,mBEkDrBC,QAASwL,II0ELrK,CAASM,EAAU+J,GJvHX,SAAC/J,EAAU+J,GACzB/J,EAAS,CACP1B,KFba,WEcbC,QAASwL,IIsHL/K,CAAQgB,EAAU+J,GAEpB1B,IACAF,GAAU,IACT,MAzBDJ,GAAqB,KAgGb,0DAQAtH,EAAAC,EAAAC,cAAC4H,EAAA7H,EAAD,CACEa,MAAM,YACNmH,QAAQ,YACRD,UAAWtF,EAAQqD,QACnBgC,QAAS,WACPzI,EAAWC,GAAU,GACrBqI,MANJ,0CAeN5H,EAAAC,EAAAC,cAACsJ,EAAAvJ,EAAD,CACEgI,QAAQ,UACRG,KAAMnB,EACNwC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CtB,QAAS,WACPnB,GAAgB,KAGlBlH,EAAAC,EAAAC,cAAC0J,EAAA3J,EAAD,CACE4J,QAAQ,8LACRC,OAAQjC,EACRzG,MAAO,CAAE2I,gBAAiB,cAI9B/J,EAAAC,EAAAC,cAACsJ,EAAAvJ,EAAD,CACEgI,QAAQ,QACRG,KAAMf,EACNoC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CK,iBAAkB,IAClB3B,QAAS,WACPf,GAAqB,KAGvBtH,EAAAC,EAAAC,cAAC0J,EAAA3J,EAAD,CACE4J,QAAQ,+IACRzI,MAAO,CAAE2I,gBAAiB,6MCrGvBE,GAjIG,SAAA/F,GAAK,IAAAhC,EACaC,mBAAS,MADtBC,EAAA/D,OAAA0B,EAAA,EAAA1B,CAAA6D,EAAA,GACdgI,EADc9H,EAAA,GACH+H,EADG/H,EAAA,GAAA+E,EAEWhF,mBAAS,MAFpBiF,EAAA/I,OAAA0B,EAAA,EAAA1B,CAAA8I,EAAA,GAEdiD,EAFchD,EAAA,GAEJiD,EAFIjD,EAAA,GAAAvH,EAGKT,IAHLU,EAAAzB,OAAA0B,EAAA,EAAA1B,CAAAwB,EAAA,GAGdlC,EAHcmC,EAAA,GAGPP,EAHOO,EAAA,GAAAyH,EAISpF,oBAAS,GAJlBqF,EAAAnJ,OAAA0B,EAAA,EAAA1B,CAAAkJ,EAAA,GAIdE,EAJcD,EAAA,GAIJE,EAJIF,EAAA,GAMf/B,EAAU,CAAC,qEAAe,8CAAY,0DACtC2C,EAAOkC,QAAQJ,GAgCrB,OACElK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiB,SAAA,KACElB,EAAAC,EAAAC,cAACwF,GAAAzF,EAAD,KACGwH,EACCzH,EAAAC,EAAAC,cAACqI,EAAAtI,EAAD,CAAkBmB,MAAO,CAAEV,OAAQ,YAAaiG,SAAU,WAAYhF,KAAM,SAE5E3B,EAAAC,EAAAC,cAACqK,GAAAtK,EAAD,KACED,EAAAC,EAAAC,cAACsK,GAAAvK,EAAD,KACED,EAAAC,EAAAC,cAACuK,GAAAxK,EAAD,KACED,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,gDACAD,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAW0K,MAAM,SAAjB,wCACA3K,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAW0K,MAAM,SAAjB,yFACA3K,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAW0K,MAAM,SAAjB,yFACA3K,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAW0K,MAAM,SAAjB,yFACA3K,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAW0K,MAAM,SAAjB,oDACA3K,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAW0K,MAAM,SAAjB,sBACA3K,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAW0K,MAAM,SAAjB,sDAIJ3K,EAAAC,EAAAC,cAAC0K,GAAA3K,EAAD,KACG5B,OAAOwM,OAAOlN,EAAMvB,OAAOyC,IAAI,SAACyK,EAAMwB,GAAP,OAC9B9K,EAAAC,EAAAC,cAACuK,GAAAxK,EAAD,CAAUnB,IAAKwK,EAAKhN,GAAI0L,UAAU,aAChChI,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAW4E,UAAU,KAAKkG,MAAM,OAC7BzB,EAAKhN,IAER0D,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAW0K,MAAM,SACdrB,EAAK9M,OACNwD,EAAAC,EAAAC,cAAC8K,EAAA/K,EAAD,CACEG,aAAW,OACX6K,YAAW7C,EAAI,YAAAmB,OAAeuB,QAAQvN,EACtC2N,gBAAc,OACdnD,QAAS,SAAAxH,GAAC,OAzDP,SAACA,EAAG4K,GACzBd,EAAYc,GACZhB,EAAa5J,EAAE6K,eAuDiBC,CAAe9K,EAAG+I,EAAKhN,KACrC8E,MAAO,CAAE8E,QAAS,IAElBlG,EAAAC,EAAAC,cAACoL,GAAArL,EAAD,OAEFD,EAAAC,EAAAC,cAACqL,GAAAtL,EAAD,CACE3D,GAAE,YAAAiN,OAAcuB,GAChB9C,UAAU,QACVwD,SAAUtB,EACV9B,KAAMkB,EAAKhN,KAAO8N,EAClB/B,QAAS,SAAA9H,GACP8J,EAAY,QAGb5E,EAAQ5G,IAAI,SAAA4M,GAAM,OACjBzL,EAAAC,EAAAC,cAACyE,GAAA1E,EAAD,CACEnB,IAAK2M,EACL1D,SA/EJzL,EA+EwBgN,EAAKhN,GA/EzBE,EA+E6BiP,EA/ElB,WACjCpB,EAAY,MLlBG,SAAC9K,EAAUzB,GAC5ByB,EAAS,CACP1B,KFnBgB,cEoBhBC,YKgBA4N,CAAWnM,EAAU,CAAEjD,KAAIE,aA8ELmP,aAAYF,GAEXA,GAlFN,IAACnP,EAAIE,MAuFRwD,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAW0K,MAAM,SAASrB,EAAK/M,MAC/ByD,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAW0K,MAAM,SAASrB,EAAK7M,aAC/BuD,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAW0K,MAAM,SAASrB,EAAK5M,MAC/BsD,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAW0K,MAAM,SAASrB,EAAK3M,WAC/BqD,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAW0K,MAAM,SAASrB,EAAK1M,KAC/BoD,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAW0K,MAAM,QAAQ3C,UAAU,qBACjChI,EAAAC,EAAAC,cAAC8K,EAAA/K,EAAD,CACE8H,QAAS,kBA9EN,SAAA+C,GAAO,IAAAc,EACoCjO,EAAMvB,MAAM0O,GAApExO,EADoBsP,EACpBtP,GAAIE,EADgBoP,EAChBpP,OAAQD,EADQqP,EACRrP,KAAME,EADEmP,EACFnP,YAAaG,EADXgP,EACWhP,IAAKF,EADhBkP,EACgBlP,KAAMC,EADtBiP,EACsBjP,UAClD+C,GAAeH,GAAU,GACzBI,GAAWJ,GAAU,GACrBE,GAAiBF,EAAU,CAAEf,MAAO,SAAUC,MAAOjC,IACrDiD,GAAiBF,EAAU,CAAEf,MAAO,KAAMC,MAAOnC,IACjDmD,GAAiBF,EAAU,CAAEf,MAAO,OAAQC,MAAOlC,IACnDkD,GAAiBF,EAAU,CAAEf,MAAO,cAAeC,MAAOhC,IAC1DgD,GAAiBF,EAAU,CAAEf,MAAO,MAAOC,MAAO7B,IAClD6C,GAAiBF,EAAU,CAAEf,MAAO,OAAQC,MAAO/B,IACnD+C,GAAiBF,EAAU,CAAEf,MAAO,YAAaC,MAAO9B,IACxD2C,EAAWC,GAAU,GAmEYsM,CAAevC,EAAKhN,KACnC8D,aAAW,OACXU,MAAM,UACNM,MAAO,CAAE8E,QAAS,IAElBlG,EAAAC,EAAAC,cAAC4L,GAAA7L,EAAD,OAEFD,EAAAC,EAAAC,cAAC8K,EAAA/K,EAAD,CACE8H,QAAS,kBA7FJzL,EA6F2BgN,EAAKhN,GA5FvDoL,GAAU,QACVwB,WAAW,YLrBI,SAAC3J,EAAUjD,GAC5BiD,EAAS,CACP1B,KFzBgB,cE0BhBC,QAASxB,IKmBPyP,CAAWxM,EAAUjD,GACrBoL,GAAU,IACT,KALoB,IAAApL,GA8FL8D,aAAW,SACXU,MAAM,YACNM,MAAO,CAAE8E,QAAS,IAElBlG,EAAAC,EAAAC,cAAC8L,GAAA/L,EAAD,gBCtGPgM,GA7BH,SAAA/H,GAAK,IAAArE,EACMT,IAAZG,EADMlB,OAAA0B,EAAA,EAAA1B,CAAAwB,EAAA,MAEf,OACEG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiB,SAAA,KACElB,EAAAC,EAAAC,cAACgM,EAAAjM,EAAD,CAAQ0G,SAAS,UACf3G,EAAAC,EAAAC,cAACiM,EAAAlM,EAAD,KACED,EAAAC,EAAAC,cAAC8K,EAAA/K,EAAD,CACEa,MAAM,UACNV,aAAW,cACXgB,MAAO,CAAE4E,YAAa,OAAQE,QAAS,GACvC6B,QAAS,WACPrI,GAAeH,GAAU,GACzBD,EAAWC,GAAU,GACrBI,GAAWJ,GAAU,KAGvBS,EAAAC,EAAAC,cAACkM,EAAAnM,EAAD,OAEFD,EAAAC,EAAAC,cAACmM,EAAApM,EAAD,CAAYgI,QAAQ,KAAKnH,MAAM,UAAUwL,QAAM,GAA/C,yEAKJtM,EAAAC,EAAAC,cAACqM,GAAD,MACAvM,EAAAC,EAAAC,cAACsM,GAAD,QC9BNC,IAASC,OACP1M,EAAAC,EAAAC,cRDoB,SAAAhC,GAAA,IAAG2H,EAAH3H,EAAG2H,SAAH,OACpB7F,EAAAC,EAAAC,cAAChB,EAAayN,SAAd,CAAuBlO,MAAOmO,qBAAWlP,EAASvB,IAC/C0J,IQDH,KACE7F,EAAAC,EAAAC,cAAC2M,GAAD,OAEFC,SAASC,eAAe","file":"static/js/main.acb661f2.chunk.js","sourcesContent":["import * as R from 'ramda';\nimport {\n  ADD_TASK,\n  EDIT_STATUS,\n  REMOVE_TASK,\n  OPEN_DRAWER,\n  HANDLE_FORM_FIELDS,\n  HANDLE_FORM_IS_EDIT,\n  HANDLE_FORM_EDIT,\n  HIDE_FIELDS\n} from '../actions/types';\n\nconst initialState = {\n  tasks: {\n    1: {\n      id: 1,\n      name: 'Task 1',\n      status: 'Выполняется',\n      description: 'Description 1',\n      date: 'Apr-07-2019',\n      important: 'Срочная важная',\n      tag: 'тег0'\n    },\n    2: {\n      id: 2,\n      name: 'Task 3',\n      status: 'На потом',\n      description: 'Description 3',\n      date: 'Apr-07-2019',\n      important: 'Срочная неважная',\n      tag: 'тег1'\n    }\n  },\n  formFields: {\n    id: null,\n    name: '',\n    status: '',\n    description: '',\n    date: new Date(),\n    important: '',\n    tag: ''\n  },\n  isDrawerOpen: false,\n  isEdit: false,\n  isHidden: true\n};\nconst createIncrement = (counter = 3) => () => counter++;\nconst getId = createIncrement();\nconst addTask = ({ id, status, name, description, date, important, tag }, state) => {\n  const newId = getId();\n  const newTask = {\n    id: newId,\n    name,\n    status,\n    description,\n    date,\n    important,\n    tag\n  };\n  const newState = R.assocPath(['tasks', newId], newTask, state);\n\n  return { ...newState };\n};\nlet newState = '';\nconst editTask = ({ id, status, name, description, date, important, tag }, state) => {\n  Object.keys(state.tasks).map(key => {\n    if (+key === +id) {\n      const transformations = {\n        id,\n        name,\n        status,\n        description,\n        date,\n        important,\n        tag\n      };\n      const merged = R.merge(state.tasks[key], transformations);\n      newState = R.assocPath(['tasks', id], merged, state);\n    }\n  });\n  return { ...newState };\n};\n\nconst setField = (field, value, state) => {\n  return R.assocPath(['formFields', field], value, state);\n};\nconst reducer = (state, { type, payload }) => {\n  const editedStatus = payload.status;\n  const newStateWithEditedOption = R.assocPath(\n    ['tasks', payload.id, 'status'],\n    editedStatus,\n    state\n  );\n  switch (type) {\n    case ADD_TASK:\n      return addTask(payload, state);\n    case EDIT_STATUS:\n      return {\n        ...newStateWithEditedOption\n      };\n    case REMOVE_TASK:\n      return {\n        ...state,\n        tasks: R.dissoc(payload, { ...state.tasks })\n      };\n    case OPEN_DRAWER:\n      return {\n        ...state,\n        isDrawerOpen: payload\n      };\n    case HANDLE_FORM_FIELDS:\n      return setField(payload.field, payload.value, state);\n    case HANDLE_FORM_IS_EDIT:\n      return {\n        ...state,\n        isEdit: payload\n      };\n    case HANDLE_FORM_EDIT:\n      return editTask(payload, state);\n    case HIDE_FIELDS:\n      return {\n        ...state,\n        isHidden: payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport { reducer, initialState };\n","const ADD_TASK = 'ADD_TASK';\nconst EDIT_STATUS = 'EDIT_STATUS';\nconst REMOVE_TASK = 'REMOVE_TASK';\nconst OPEN_DRAWER = 'OPEN_DRAWER';\nconst HANDLE_FORM_FIELDS = 'HANDLE_FORM_FIELDS';\nconst HANDLE_FORM_IS_EDIT = 'HANDLE_FORM_IS_EDIT';\nconst HANDLE_FORM_EDIT = 'HANDLE_FORM_EDIT';\nconst HIDE_FIELDS = 'HIDE_FIELDS';\n\nexport {\n  ADD_TASK,\n  EDIT_STATUS,\n  REMOVE_TASK,\n  OPEN_DRAWER,\n  HANDLE_FORM_FIELDS,\n  HANDLE_FORM_IS_EDIT,\n  HANDLE_FORM_EDIT,\n  HIDE_FIELDS\n};\n","import React, { createContext, useContext, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { reducer, initialState } from './reducers';\n\nconst StateContext = createContext();\nconst StateProvider = ({ children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\nconst useStateValue = () => useContext(StateContext);\n\nStateProvider.propTypes = {\n  children: PropTypes.instanceOf(Object).isRequired\n};\n\nexport { useStateValue, StateContext, StateProvider };\n","import {\n  ADD_TASK,\n  EDIT_STATUS,\n  REMOVE_TASK,\n  OPEN_DRAWER,\n  HANDLE_FORM_FIELDS,\n  HANDLE_FORM_IS_EDIT,\n  HANDLE_FORM_EDIT,\n  HIDE_FIELDS\n} from './types';\n\nconst addTask = (dispatch, task) => {\n  dispatch({\n    type: ADD_TASK,\n    payload: task\n  });\n};\n\nconst editStatus = (dispatch, payload) => {\n  dispatch({\n    type: EDIT_STATUS,\n    payload\n  });\n};\n\nconst removeTask = (dispatch, id) => {\n  dispatch({\n    type: REMOVE_TASK,\n    payload: id\n  });\n};\n\nconst openDrawer = (dispatch, isOpen) => {\n  dispatch({\n    type: OPEN_DRAWER,\n    payload: isOpen\n  });\n};\n\nconst handleFormFields = (dispatch, field) => {\n  dispatch({\n    type: HANDLE_FORM_FIELDS,\n    payload: field\n  });\n};\n\nconst handleFormEdit = (dispatch, isEdit) => {\n  dispatch({\n    type: HANDLE_FORM_IS_EDIT,\n    payload: isEdit\n  });\n};\n\nconst editTask = (dispatch, task) => {\n  dispatch({\n    type: HANDLE_FORM_EDIT,\n    payload: task\n  });\n};\n\nconst hideFields = (dispatch, payload) => {\n  dispatch({\n    type: HIDE_FIELDS,\n    payload\n  });\n};\nexport {\n  addTask,\n  editStatus,\n  removeTask,\n  openDrawer,\n  handleFormFields,\n  handleFormEdit,\n  editTask,\n  hideFields\n};\n","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { useStateValue } from '../../store';\nimport { handleFormFields } from '../../actions';\n\nconst RadioButtons = () => {\n  const [state, dispatch] = useStateValue();\n\n  return (\n    <RadioGroup\n      aria-label=\"position\"\n      name=\"position\"\n      value={state.formFields.important}\n      defaultValue={state.formFields.important}\n      onChange={e => {\n        handleFormFields(dispatch, { field: 'important', value: e.target.value });\n      }}\n      row\n      margin=\"normal\"\n    >\n      <FormControlLabel\n        value=\"Срочная важная\"\n        control={<Radio color=\"primary\" />}\n        label=\"Срочная важная\"\n        labelPlacement=\"bottom\"\n      />\n      <FormControlLabel\n        value=\"Срочная неважная\"\n        control={<Radio color=\"primary\" />}\n        label=\"Срочная неважная\"\n        labelPlacement=\"bottom\"\n      />\n      <FormControlLabel\n        value=\"Не срочная важная\"\n        control={<Radio color=\"primary\" />}\n        label=\"Не срочная важная\"\n        labelPlacement=\"bottom\"\n      />\n      <FormControlLabel\n        value=\"Не срочная неважная\"\n        control={<Radio color=\"primary\" />}\n        label=\"Не срочная неважная\"\n        labelPlacement=\"bottom\"\n      />\n    </RadioGroup>\n  );\n};\n\nexport default RadioButtons;\n","import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Icon from '@material-ui/core/Icon';\nimport FormControl from '@material-ui/core/FormControl';\nimport { handleFormFields } from '../../actions';\nimport { useStateValue } from '../../store';\nimport '../../main.scss';\n\nconst FormSelect = () => {\n  const [state, dispatch] = useStateValue();\n  return (\n    <>\n      <FormControl margin=\"normal\">\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n          <InputLabel htmlFor=\"age-native-simple\" style={{ top: '-18px', left: '44px' }}>\n            Статус\n          </InputLabel>\n          <Select\n            native\n            value={state.formFields.status}\n            onChange={e => handleFormFields(dispatch, { field: 'status', value: e.target.value })}\n            style={{ width: '93%' }}\n          >\n            <option value=\"\" />\n            <option value=\"Выполняется\">Выполняется</option>\n            <option value=\"На потом\">На потом</option>\n            <option value=\"Выполнена\">Выполнена</option>\n          </Select>\n          <Icon style={{ order: '-1', color: '#303f9f' }}>update</Icon>\n        </div>\n      </FormControl>\n    </>\n  );\n};\n\nexport default FormSelect;\n","import React, { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Autosuggest from 'react-autosuggest';\nimport match from 'autosuggest-highlight/match';\nimport Icon from '@material-ui/core/Icon';\nimport parse from 'autosuggest-highlight/parse';\nimport deburr from 'lodash/deburr';\nimport { useStateValue } from '../../store';\nimport { handleFormFields } from '../../actions';\nimport '../../main.scss';\n\nconst Autosuggestion = () => {\n  const [state, dispatch] = useStateValue();\n  const [suggestion, setSuggestion] = useState();\n  const suggestions = [{ label: 'тег0' }, { label: 'тег1' }, { label: 'тег2' }, { label: 'тег3' }];\n  const renderInputComponent = inputProps => {\n    const { classes, inputRef = () => {}, ref, ...other } = inputProps;\n\n    return (\n      <TextField\n        fullWidth\n        InputProps={{\n          inputRef: node => {\n            ref(node);\n            inputRef(node);\n          }\n        }}\n        {...other}\n      />\n    );\n  };\n  const renderSuggestion = (suggestion, { query, isHighlighted }) => {\n    const matches = match(suggestion.label, query);\n    const parts = parse(suggestion.label, matches);\n\n    return (\n      <MenuItem selected={isHighlighted} component=\"div\">\n        <div>\n          {parts.map((part, index) =>\n            part.highlight ? (\n              <span key={String(index)} style={{ fontWeight: 500 }}>\n                {part.text}\n              </span>\n            ) : (\n              <strong key={String(index)} style={{ fontWeight: 300 }}>\n                {part.text}\n              </strong>\n            )\n          )}\n        </div>\n      </MenuItem>\n    );\n  };\n  const getSuggestions = value => {\n    const inputValue = deburr(value.trim()).toLowerCase();\n    const inputLength = inputValue.length;\n    let count = 0;\n    return inputLength === 0\n      ? []\n      : suggestions.filter(suggestion => {\n          const keep =\n            count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n          if (keep) {\n            count += 1;\n          }\n\n          return keep;\n        });\n  };\n  const getSuggestionValue = suggestion => {\n    return suggestion.label;\n  };\n  const handleSuggestionsFetchRequested = ({ value }) => {\n    setSuggestion(getSuggestions(value));\n  };\n  const handleSuggestionsClearRequested = _ => {\n    setSuggestion(suggestions);\n  };\n\n  const handleSelect = _ => (event, { newValue }) => {\n    handleFormFields(dispatch, { field: 'tag', value: newValue });\n  };\n\n  const autosuggestProps = {\n    renderInputComponent,\n    suggestions,\n    onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\n    onSuggestionsClearRequested: handleSuggestionsClearRequested,\n    getSuggestionValue,\n    renderSuggestion\n  };\n  return (\n    <>\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n        <Autosuggest\n          {...autosuggestProps}\n          inputProps={{\n            placeholder: 'Укажите тег (доступны теги, которые начинаются на т)',\n            value: state.formFields.tag,\n            onChange: handleSelect(),\n            margin: 'normal'\n          }}\n          renderSuggestionsContainer={options => (\n            <Paper {...options.containerProps} square>\n              {options.children}\n            </Paper>\n          )}\n        />\n        <Icon style={{ order: '-1', color: '#303f9f' }}>room</Icon>\n      </div>\n    </>\n  );\n};\n\nexport default Autosuggestion;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport SnackBar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider, DatePicker } from 'material-ui-pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Icon from '@material-ui/core/Icon';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RadioButtons from './RadioButtons';\nimport FormSelect from './FormSelect';\nimport Autosuggestion from './Autosuggestion';\nimport { useStateValue } from '../../store';\nimport { addTask, openDrawer, handleFormFields, editTask, hideFields } from '../../actions';\n\nconst styles = {\n  buttons: {\n    marginRight: '15px',\n    '&:focus': {\n      outline: 'none'\n    },\n    '&:last-child': {\n      marginRight: '0'\n    }\n  },\n  wrapper: {\n    padding: '0 25px',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  titleMargin: {\n    marginBottom: '25px'\n  },\n  buttonWrapper: {\n    display: 'flex',\n    marginTop: '16px',\n    position: 'absolute',\n    bottom: '50px'\n  },\n  drawerContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '540px',\n    overflow: 'scroll',\n    padding: '50px 0'\n  },\n  snackBar: {\n    position: 'absolute',\n    left: '-50px'\n  }\n};\n\nconst DrawerForm = ({ classes }) => {\n  const [state, dispatch] = useStateValue();\n  const [isSnackbarVisible, setShowSnackbar] = useState(false);\n  const [isErrorSnackbarVisible, setErrorShowSnackbar] = useState(false);\n  const [isLoader, setLoader] = useState(false);\n\n  const handleSnackbarBack = _ => {\n    setShowSnackbar(false);\n  };\n  const handleExitModal = _ => {\n    openDrawer(dispatch, false);\n    setShowSnackbar(false);\n  };\n  const resetForm = () => {\n    handleFormFields(dispatch, { field: 'status', value: '' });\n    handleFormFields(dispatch, { field: 'id', value: null });\n    handleFormFields(dispatch, { field: 'name', value: '' });\n    handleFormFields(dispatch, { field: 'description', value: '' });\n    handleFormFields(dispatch, { field: 'tag', value: '' });\n    handleFormFields(dispatch, { field: 'date', value: new Date() });\n    handleFormFields(dispatch, { field: 'important', value: '' });\n  };\n  const snackBarAction = (\n    <div>\n      <Button\n        onClick={_ => handleExitModal()}\n        className={classes.buttons}\n        variant=\"text\"\n        color=\"secondary\"\n        size=\"small\"\n      >\n        Продолжить\n      </Button>\n      <Button\n        onClick={_ => handleSnackbarBack()}\n        className={classes.buttons}\n        variant=\"text\"\n        style={{ color: '#fff' }}\n        size=\"small\"\n      >\n        Назад\n      </Button>\n    </div>\n  );\n  const showSnackbar = _ => {\n    setShowSnackbar(true);\n  };\n  const handleDate = date => {\n    handleFormFields(dispatch, { field: 'date', value: date });\n    if (state.isHidden) hideFields(dispatch, false);\n  };\n  const handleSaveTask = _ => {\n    const { id, name, description, date: selectedDate, status, important, tag } = state.formFields;\n\n    if (name.length === 0) {\n      setErrorShowSnackbar(true);\n      return;\n    }\n    setLoader(true);\n\n    setTimeout(() => {\n      handleExitModal();\n\n      const dateFormat = new Date(selectedDate).toGMTString().split(' ');\n      const task = {\n        id,\n        name,\n        description,\n        date: `${dateFormat[2]}-${dateFormat[1]}-${dateFormat[3]}`,\n        status,\n        important,\n        tag\n      };\n      if (state.isEdit) {\n        editTask(dispatch, task);\n      } else {\n        addTask(dispatch, task);\n      }\n      resetForm();\n      setLoader(false);\n    }, 2000);\n  };\n\n  return (\n    <div className=\"div\">\n      <Drawer open={state.isDrawerOpen} onClose={_ => showSnackbar()} anchor=\"right\">\n        {isLoader ? (\n          <CircularProgress style={{ margin: '100px' }} />\n        ) : (\n          <div className={classes.wrapper}>\n            <h1 className={classes.titleMargin}>Новая задача</h1>\n            <div className={classes.drawerContent}>\n              <div\n                style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}\n              >\n                <TextField\n                  size=\"small\"\n                  variant=\"outlined\"\n                  label=\"Название задачи\"\n                  onChange={e =>\n                    handleFormFields(dispatch, { field: 'name', value: e.target.value })\n                  }\n                  style={{ width: state.isHidden ? '200px' : '93%' }}\n                  value={state.formFields.name}\n                >\n                  <Input />\n                </TextField>\n                <Icon style={{ order: '-1', color: '#303f9f' }}>create</Icon>\n              </div>\n              <div\n                style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}\n              >\n                <TextField\n                  size=\"small\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  multiline={true}\n                  label=\"Описание задачи\"\n                  onChange={e =>\n                    handleFormFields(dispatch, { field: 'description', value: e.target.value })\n                  }\n                  style={{ width: state.isHidden ? '200px' : '93%' }}\n                  value={state.formFields.description}\n                >\n                  <Input />\n                </TextField>\n                <Icon style={{ order: '-1', color: '#303f9f' }}>assignment</Icon>\n              </div>\n              <div\n                style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}\n              >\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <DatePicker\n                    value={state.formFields.date}\n                    style={{ width: state.isHidden ? '200px' : '93%' }}\n                    onChange={handleDate}\n                    margin=\"normal\"\n                  />\n                </MuiPickersUtilsProvider>\n                <Icon style={{ order: '-1', color: '#303f9f' }}>date_range</Icon>\n              </div>\n              <div\n                className=\"hidden-fields\"\n                style={{ display: state.isHidden ? 'none' : 'flex', flexDirection: 'column' }}\n              >\n                <RadioButtons />\n                <FormSelect />\n                <Autosuggestion />\n              </div>\n            </div>\n            <div className={classes.buttonWrapper}>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                className={classes.buttons}\n                onClick={handleSaveTask}\n              >\n                Сохранить\n              </Button>\n              <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                className={classes.buttons}\n                onClick={() => {\n                  openDrawer(dispatch, false);\n                  resetForm();\n                }}\n              >\n                Отмена\n              </Button>\n            </div>\n          </div>\n        )}\n\n        <SnackBar\n          variant=\"warning\"\n          open={isSnackbarVisible}\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n          onClose={() => {\n            setShowSnackbar(false);\n          }}\n        >\n          <SnackbarContent\n            message=\"Кажется вы забыли сохранить задачу...\"\n            action={snackBarAction}\n            style={{ backgroundColor: '#ffa000' }}\n          />\n        </SnackBar>\n\n        <SnackBar\n          variant=\"error\"\n          open={isErrorSnackbarVisible}\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n          autoHideDuration={3000}\n          onClose={() => {\n            setErrorShowSnackbar(false);\n          }}\n        >\n          <SnackbarContent\n            message=\"Заполните название задачи\"\n            style={{ backgroundColor: '#d32f2f' }}\n          />\n        </SnackBar>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(DrawerForm);\n\nDrawerForm.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired\n  // setIsDrawerOpen: PropTypes.func,\n  // isDrawerOpen: PropTypes.bool\n};\n// DrawerForm.defaultProps = {\n//   setIsDrawerOpen: () => {},\n//   isDrawerOpen: false\n// };\n","import React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { useStateValue } from '../store';\nimport {\n  editStatus,\n  removeTask,\n  openDrawer,\n  handleFormFields,\n  handleFormEdit,\n  hideFields\n} from '../actions';\nimport '../main.scss';\n\nconst TaskTable = _ => {\n  const [statusVal, setStatusVal] = useState(null);\n  const [openedId, setOpenedId] = useState(null);\n  const [state, dispatch] = useStateValue();\n  const [isLoader, setLoader] = useState(false);\n\n  const options = ['Выполняется', 'На потом', 'Выполнена'];\n  const open = Boolean(statusVal);\n\n  const handleEdit = (id, status) => () => {\n    setOpenedId(null);\n    editStatus(dispatch, { id, status });\n  };\n\n  const createOpenMenu = (e, taskId) => {\n    setOpenedId(taskId);\n    setStatusVal(e.currentTarget);\n  };\n  const handleRemoveTask = id => {\n    setLoader(true);\n    setTimeout(() => {\n      removeTask(dispatch, id);\n      setLoader(false);\n    }, 2000);\n  };\n  const handleEditTask = idx => {\n    const { id, status, name, description, tag, date, important } = state.tasks[idx];\n    handleFormEdit(dispatch, true);\n    hideFields(dispatch, false);\n    handleFormFields(dispatch, { field: 'status', value: status });\n    handleFormFields(dispatch, { field: 'id', value: id });\n    handleFormFields(dispatch, { field: 'name', value: name });\n    handleFormFields(dispatch, { field: 'description', value: description });\n    handleFormFields(dispatch, { field: 'tag', value: tag });\n    handleFormFields(dispatch, { field: 'date', value: date });\n    handleFormFields(dispatch, { field: 'important', value: important });\n    openDrawer(dispatch, true);\n  };\n\n  return (\n    <>\n      <Paper>\n        {isLoader ? (\n          <CircularProgress style={{ margin: '50px auto', position: 'absolute', left: '50%' }} />\n        ) : (\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>ID задачи</TableCell>\n                <TableCell align=\"right\">Статус</TableCell>\n                <TableCell align=\"right\">Название задачи</TableCell>\n                <TableCell align=\"right\">Описание задачи</TableCell>\n                <TableCell align=\"right\">Дата выполнения</TableCell>\n                <TableCell align=\"right\">Важность</TableCell>\n                <TableCell align=\"right\">Тег</TableCell>\n                <TableCell align=\"right\">Действие</TableCell>\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {Object.values(state.tasks).map((task, idx) => (\n                <TableRow key={task.id} className=\"table-row\">\n                  <TableCell component=\"th\" scope=\"row\">\n                    {task.id}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {task.status}\n                    <IconButton\n                      aria-label=\"More\"\n                      aria-owns={open ? `long-menu${idx}` : undefined}\n                      aria-haspopup=\"true\"\n                      onClick={e => createOpenMenu(e, task.id)}\n                      style={{ outline: 0 }}\n                    >\n                      <MoreVertIcon />\n                    </IconButton>\n                    <Menu\n                      id={`long-menu${idx}`}\n                      className=\"hello\"\n                      anchorEl={statusVal}\n                      open={task.id === openedId}\n                      onClose={e => {\n                        setOpenedId(null);\n                      }}\n                    >\n                      {options.map(option => (\n                        <MenuItem\n                          key={option}\n                          onClick={handleEdit(task.id, option)}\n                          data-value={option}\n                        >\n                          {option}\n                        </MenuItem>\n                      ))}\n                    </Menu>\n                  </TableCell>\n                  <TableCell align=\"right\">{task.name}</TableCell>\n                  <TableCell align=\"right\">{task.description}</TableCell>\n                  <TableCell align=\"right\">{task.date}</TableCell>\n                  <TableCell align=\"right\">{task.important}</TableCell>\n                  <TableCell align=\"right\">{task.tag}</TableCell>\n                  <TableCell align=\"right\" className=\"table-row--hidden\">\n                    <IconButton\n                      onClick={() => handleEditTask(task.id)}\n                      aria-label=\"Edit\"\n                      color=\"primary\"\n                      style={{ outline: 0 }}\n                    >\n                      <EditIcon />\n                    </IconButton>\n                    <IconButton\n                      onClick={() => handleRemoveTask(task.id)}\n                      aria-label=\"Delete\"\n                      color=\"secondary\"\n                      style={{ outline: 0 }}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        )}\n      </Paper>\n    </>\n  );\n};\n\nexport default TaskTable;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport AddIcon from '@material-ui/icons/Add';\nimport DrawerForm from './Form/DrawerForm';\nimport TaskTable from './TaskTable';\nimport { useStateValue } from '../store';\nimport { openDrawer, handleFormEdit, hideFields } from '../actions';\n\nconst App = _ => {\n  const [, dispatch] = useStateValue();\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"Open drawer\"\n            style={{ marginRight: '10px', outline: 0 }}\n            onClick={() => {\n              handleFormEdit(dispatch, false);\n              openDrawer(dispatch, true);\n              hideFields(dispatch, true);\n            }}\n          >\n            <AddIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Список задач\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <DrawerForm />\n      <TaskTable />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { StateProvider } from './store';\n\nReactDOM.render(\n  <StateProvider>\n    <App />\n  </StateProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}